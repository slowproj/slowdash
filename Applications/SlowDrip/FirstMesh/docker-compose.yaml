services:

  key-value-store:
    image: ghcr.io/driplineorg/dripline-python:v5.0.0
    depends_on:
      rabbit-broker:
        condition: service_healthy
    volumes:
      - ./key-value-store.yaml:/root/key-value-store.yaml
      - ./dripline_mesh.yaml:/root/.dripline_mesh.yaml
    environment:
      - DRIPLINE_USER=dripline
      - DRIPLINE_PASSWORD=dripline
    command: >
      bash -c "dl-serve -vv -c /root/key-value-store.yaml"


  sensor-logger:
    image: ghcr.io/driplineorg/dripline-python:v5.0.0
    depends_on:
      rabbit-broker:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./sensor-logger.yaml:/root/sensor-logger.yaml
      - ./dripline_mesh.yaml:/root/.dripline_mesh.yaml
    environment:
      - DRIPLINE_USER=dripline
      - DRIPLINE_PASSWORD=dripline
    command:
      bash -c "dl-serve -vv -c /root/sensor-logger.yaml"


  rabbit-broker:
    image: rabbitmq:4-management
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=dripline
      - RABBITMQ_DEFAULT_PASS=dripline
    healthcheck:
      test: ["CMD-SHELL", "curl -u dripline:dripline http://rabbit-broker:15672/api/overview &> /dev/null || exit 1"]


  http-server:
    image: ghcr.io/project8/dragonfly:develop-dev
    depends_on:
      rabbit-broker:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./dripline_mesh.yaml:/root/.dripline_mesh.yaml
    environment:
      - DRIPLINE_USER=dripline
      - DRIPLINE_PASSWORD=dripline
    command: >
      bash -c "dl-http-server web_root=/usr/local/src_py/html"


  postgres:
    image: postgres:16.0
    volumes:
      - ./postgres_init.d:/docker-entrypoint-initdb.d
    environment:
      # per the docs, you do *not* want to run with this configuration in production
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5



  slowdash:
    image: slowproj/slowdash
    ports:
      - "18881:18881"
    volumes:
      - ./slowdash.d:/project
